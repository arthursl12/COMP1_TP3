Terminals unused in grammar

    SIN
    LOG
    COS
    ORD
    CHR
    ABS
    SQRT
    EXP
    EOF_TOKEN
    EOLN


Grammar

    0 $accept: program $end

    1 program: PROGRAM IDENTIFIER ';' decl_list compound_stmt

    2 decl_list: decl_list ';' decl
    3          | decl

    4 decl: ident_list ':' type

    5 ident_list: ident_list ',' IDENTIFIER
    6           | IDENTIFIER

    7 type: INTEGER
    8     | REAL
    9     | BOOLEAN
   10     | CHAR

   11 compound_stmt: BEGIN_STMT stmt_list END

   12 stmt_list: stmt_list ';' stmt
   13          | stmt

   14 stmt: label ':' unlabelled_stmt
   15     | unlabelled_stmt

   16 label: IDENTIFIER

   17 unlabelled_stmt: assign_stmt
   18                | if_stmt
   19                | loop_stmt
   20                | read_stmt
   21                | write_stmt
   22                | goto_stmt
   23                | compound_stmt

   24 assign_stmt: IDENTIFIER ASSIGN expr

   25 cond: expr

   26 if_stmt: IF cond THEN stmt
   27        | IF cond THEN stmt ELSE stmt

   28 loop_stmt: stmt_prefix DO stmt_list stmt_suffix

   29 stmt_prefix: WHILE cond
   30            | %empty

   31 stmt_suffix: UNTIL cond
   32            | END

   33 read_stmt: READ '(' ident_list ')'

   34 write_stmt: WRITE '(' expr_list ')'

   35 goto_stmt: GOTO IDENTIFIER

   36 expr_list: expr
   37          | expr_list ',' expr

   38 expr: simple_expr
   39     | simple_expr RELOP simple_expr

   40 simple_expr: term
   41            | simple_expr ADDOP term
   42            | simple_expr '-' term

   43 term: factor_a
   44     | term MULOP factor_a

   45 function_ref: function_ref_par

   46 function_ref_par: variable '(' expr_list ')'

   47 variable: simple_variable_or_proc
   48         | function_ref_par

   49 simple_variable_or_proc: IDENTIFIER_F

   50 factor_a: '-' factor
   51         | factor

   52 factor: IDENTIFIER
   53       | constant
   54       | '(' expr ')'
   55       | function_ref
   56       | NOT factor

   57 constant: INT_CONSTANT
   58         | REAL_CONSTANT
   59         | CHAR_CONSTANT
   60         | BOOL_CONSTANT


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 33 34 46 54
    ')' (41) 33 34 46 54
    ',' (44) 5 37
    '-' (45) 42 50
    ':' (58) 4 14
    ';' (59) 1 2 12
    error (256)
    ADDOP (258) 41
    RELOP (259) 39
    MULOP (260) 44
    NOT (261) 56
    ASSIGN (262) 24
    INT_CONSTANT <integer> (263) 57
    REAL_CONSTANT <real> (264) 58
    BOOL_CONSTANT <boolean> (265) 60
    IDENTIFIER <string> (266) 1 5 6 16 24 35 52
    IDENTIFIER_F <string> (267) 49
    CHAR_CONSTANT <character> (268) 59
    PROGRAM (269) 1
    INTEGER <string> (270) 7
    REAL <string> (271) 8
    BOOLEAN <string> (272) 9
    CHAR <string> (273) 10
    BEGIN_STMT (274) 11
    END (275) 11 32
    IF (276) 26 27
    THEN (277) 26 27
    ELSE (278) 27
    DO (279) 28
    WHILE (280) 29
    UNTIL (281) 31
    READ (282) 33
    WRITE (283) 34
    GOTO (284) 35
    SIN (285)
    LOG (286)
    COS (287)
    ORD (288)
    CHR (289)
    ABS (290)
    SQRT (291)
    EXP (292)
    EOF_TOKEN (293)
    EOLN (294)


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    program (47)
        on left: 1
        on right: 0
    decl_list (48)
        on left: 2 3
        on right: 1 2
    decl <string> (49)
        on left: 4
        on right: 2 3
    ident_list <string> (50)
        on left: 5 6
        on right: 4 5 33
    type <string> (51)
        on left: 7 8 9 10
        on right: 4
    compound_stmt (52)
        on left: 11
        on right: 1 23
    stmt_list (53)
        on left: 12 13
        on right: 11 12 28
    stmt (54)
        on left: 14 15
        on right: 12 13 26 27
    label (55)
        on left: 16
        on right: 14
    unlabelled_stmt (56)
        on left: 17 18 19 20 21 22 23
        on right: 14 15
    assign_stmt (57)
        on left: 24
        on right: 17
    cond (58)
        on left: 25
        on right: 26 27 29 31
    if_stmt (59)
        on left: 26 27
        on right: 18
    loop_stmt (60)
        on left: 28
        on right: 19
    stmt_prefix (61)
        on left: 29 30
        on right: 28
    stmt_suffix (62)
        on left: 31 32
        on right: 28
    read_stmt (63)
        on left: 33
        on right: 20
    write_stmt (64)
        on left: 34
        on right: 21
    goto_stmt (65)
        on left: 35
        on right: 22
    expr_list (66)
        on left: 36 37
        on right: 34 37 46
    expr (67)
        on left: 38 39
        on right: 24 25 36 37 54
    simple_expr (68)
        on left: 40 41 42
        on right: 38 39 41 42
    term (69)
        on left: 43 44
        on right: 40 41 42 44
    function_ref (70)
        on left: 45
        on right: 55
    function_ref_par (71)
        on left: 46
        on right: 45 48
    variable (72)
        on left: 47 48
        on right: 46
    simple_variable_or_proc (73)
        on left: 49
        on right: 47
    factor_a (74)
        on left: 50 51
        on right: 43 44
    factor (75)
        on left: 52 53 54 55 56
        on right: 50 51 56
    constant (76)
        on left: 57 58 59 60
        on right: 53


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM . IDENTIFIER ';' decl_list compound_stmt

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM IDENTIFIER . ';' decl_list compound_stmt

    ';'  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: PROGRAM IDENTIFIER ';' . decl_list compound_stmt

    IDENTIFIER  shift, and go to state 6

    decl_list   go to state 7
    decl        go to state 8
    ident_list  go to state 9


State 6

    6 ident_list: IDENTIFIER .

    $default  reduce using rule 6 (ident_list)


State 7

    1 program: PROGRAM IDENTIFIER ';' decl_list . compound_stmt
    2 decl_list: decl_list . ';' decl

    BEGIN_STMT  shift, and go to state 10
    ';'         shift, and go to state 11

    compound_stmt  go to state 12


State 8

    3 decl_list: decl .

    $default  reduce using rule 3 (decl_list)


State 9

    4 decl: ident_list . ':' type
    5 ident_list: ident_list . ',' IDENTIFIER

    ':'  shift, and go to state 13
    ','  shift, and go to state 14


State 10

   11 compound_stmt: BEGIN_STMT . stmt_list END

    IDENTIFIER  shift, and go to state 15
    BEGIN_STMT  shift, and go to state 10
    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    READ        shift, and go to state 18
    WRITE       shift, and go to state 19
    GOTO        shift, and go to state 20

    $default  reduce using rule 30 (stmt_prefix)

    compound_stmt    go to state 21
    stmt_list        go to state 22
    stmt             go to state 23
    label            go to state 24
    unlabelled_stmt  go to state 25
    assign_stmt      go to state 26
    if_stmt          go to state 27
    loop_stmt        go to state 28
    stmt_prefix      go to state 29
    read_stmt        go to state 30
    write_stmt       go to state 31
    goto_stmt        go to state 32


State 11

    2 decl_list: decl_list ';' . decl

    IDENTIFIER  shift, and go to state 6

    decl        go to state 33
    ident_list  go to state 9


State 12

    1 program: PROGRAM IDENTIFIER ';' decl_list compound_stmt .

    $default  reduce using rule 1 (program)


State 13

    4 decl: ident_list ':' . type

    INTEGER  shift, and go to state 34
    REAL     shift, and go to state 35
    BOOLEAN  shift, and go to state 36
    CHAR     shift, and go to state 37

    type  go to state 38


State 14

    5 ident_list: ident_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 39


State 15

   16 label: IDENTIFIER .
   24 assign_stmt: IDENTIFIER . ASSIGN expr

    ASSIGN  shift, and go to state 40

    $default  reduce using rule 16 (label)


State 16

   26 if_stmt: IF . cond THEN stmt
   27        | IF . cond THEN stmt ELSE stmt

    NOT            shift, and go to state 41
    INT_CONSTANT   shift, and go to state 42
    REAL_CONSTANT  shift, and go to state 43
    BOOL_CONSTANT  shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    IDENTIFIER_F   shift, and go to state 46
    CHAR_CONSTANT  shift, and go to state 47
    '('            shift, and go to state 48
    '-'            shift, and go to state 49

    cond                     go to state 50
    expr                     go to state 51
    simple_expr              go to state 52
    term                     go to state 53
    function_ref             go to state 54
    function_ref_par         go to state 55
    variable                 go to state 56
    simple_variable_or_proc  go to state 57
    factor_a                 go to state 58
    factor                   go to state 59
    constant                 go to state 60


State 17

   29 stmt_prefix: WHILE . cond

    NOT            shift, and go to state 41
    INT_CONSTANT   shift, and go to state 42
    REAL_CONSTANT  shift, and go to state 43
    BOOL_CONSTANT  shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    IDENTIFIER_F   shift, and go to state 46
    CHAR_CONSTANT  shift, and go to state 47
    '('            shift, and go to state 48
    '-'            shift, and go to state 49

    cond                     go to state 61
    expr                     go to state 51
    simple_expr              go to state 52
    term                     go to state 53
    function_ref             go to state 54
    function_ref_par         go to state 55
    variable                 go to state 56
    simple_variable_or_proc  go to state 57
    factor_a                 go to state 58
    factor                   go to state 59
    constant                 go to state 60


State 18

   33 read_stmt: READ . '(' ident_list ')'

    '('  shift, and go to state 62


State 19

   34 write_stmt: WRITE . '(' expr_list ')'

    '('  shift, and go to state 63


State 20

   35 goto_stmt: GOTO . IDENTIFIER

    IDENTIFIER  shift, and go to state 64


State 21

   23 unlabelled_stmt: compound_stmt .

    $default  reduce using rule 23 (unlabelled_stmt)


State 22

   11 compound_stmt: BEGIN_STMT stmt_list . END
   12 stmt_list: stmt_list . ';' stmt

    END  shift, and go to state 65
    ';'  shift, and go to state 66


State 23

   13 stmt_list: stmt .

    $default  reduce using rule 13 (stmt_list)


State 24

   14 stmt: label . ':' unlabelled_stmt

    ':'  shift, and go to state 67


State 25

   15 stmt: unlabelled_stmt .

    $default  reduce using rule 15 (stmt)


State 26

   17 unlabelled_stmt: assign_stmt .

    $default  reduce using rule 17 (unlabelled_stmt)


State 27

   18 unlabelled_stmt: if_stmt .

    $default  reduce using rule 18 (unlabelled_stmt)


State 28

   19 unlabelled_stmt: loop_stmt .

    $default  reduce using rule 19 (unlabelled_stmt)


State 29

   28 loop_stmt: stmt_prefix . DO stmt_list stmt_suffix

    DO  shift, and go to state 68


State 30

   20 unlabelled_stmt: read_stmt .

    $default  reduce using rule 20 (unlabelled_stmt)


State 31

   21 unlabelled_stmt: write_stmt .

    $default  reduce using rule 21 (unlabelled_stmt)


State 32

   22 unlabelled_stmt: goto_stmt .

    $default  reduce using rule 22 (unlabelled_stmt)


State 33

    2 decl_list: decl_list ';' decl .

    $default  reduce using rule 2 (decl_list)


State 34

    7 type: INTEGER .

    $default  reduce using rule 7 (type)


State 35

    8 type: REAL .

    $default  reduce using rule 8 (type)


State 36

    9 type: BOOLEAN .

    $default  reduce using rule 9 (type)


State 37

   10 type: CHAR .

    $default  reduce using rule 10 (type)


State 38

    4 decl: ident_list ':' type .

    $default  reduce using rule 4 (decl)


State 39

    5 ident_list: ident_list ',' IDENTIFIER .

    $default  reduce using rule 5 (ident_list)


State 40

   24 assign_stmt: IDENTIFIER ASSIGN . expr

    NOT            shift, and go to state 41
    INT_CONSTANT   shift, and go to state 42
    REAL_CONSTANT  shift, and go to state 43
    BOOL_CONSTANT  shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    IDENTIFIER_F   shift, and go to state 46
    CHAR_CONSTANT  shift, and go to state 47
    '('            shift, and go to state 48
    '-'            shift, and go to state 49

    expr                     go to state 69
    simple_expr              go to state 52
    term                     go to state 53
    function_ref             go to state 54
    function_ref_par         go to state 55
    variable                 go to state 56
    simple_variable_or_proc  go to state 57
    factor_a                 go to state 58
    factor                   go to state 59
    constant                 go to state 60


State 41

   56 factor: NOT . factor

    NOT            shift, and go to state 41
    INT_CONSTANT   shift, and go to state 42
    REAL_CONSTANT  shift, and go to state 43
    BOOL_CONSTANT  shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    IDENTIFIER_F   shift, and go to state 46
    CHAR_CONSTANT  shift, and go to state 47
    '('            shift, and go to state 48

    function_ref             go to state 54
    function_ref_par         go to state 55
    variable                 go to state 56
    simple_variable_or_proc  go to state 57
    factor                   go to state 70
    constant                 go to state 60


State 42

   57 constant: INT_CONSTANT .

    $default  reduce using rule 57 (constant)


State 43

   58 constant: REAL_CONSTANT .

    $default  reduce using rule 58 (constant)


State 44

   60 constant: BOOL_CONSTANT .

    $default  reduce using rule 60 (constant)


State 45

   52 factor: IDENTIFIER .

    $default  reduce using rule 52 (factor)


State 46

   49 simple_variable_or_proc: IDENTIFIER_F .

    $default  reduce using rule 49 (simple_variable_or_proc)


State 47

   59 constant: CHAR_CONSTANT .

    $default  reduce using rule 59 (constant)


State 48

   54 factor: '(' . expr ')'

    NOT            shift, and go to state 41
    INT_CONSTANT   shift, and go to state 42
    REAL_CONSTANT  shift, and go to state 43
    BOOL_CONSTANT  shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    IDENTIFIER_F   shift, and go to state 46
    CHAR_CONSTANT  shift, and go to state 47
    '('            shift, and go to state 48
    '-'            shift, and go to state 49

    expr                     go to state 71
    simple_expr              go to state 52
    term                     go to state 53
    function_ref             go to state 54
    function_ref_par         go to state 55
    variable                 go to state 56
    simple_variable_or_proc  go to state 57
    factor_a                 go to state 58
    factor                   go to state 59
    constant                 go to state 60


State 49

   50 factor_a: '-' . factor

    NOT            shift, and go to state 41
    INT_CONSTANT   shift, and go to state 42
    REAL_CONSTANT  shift, and go to state 43
    BOOL_CONSTANT  shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    IDENTIFIER_F   shift, and go to state 46
    CHAR_CONSTANT  shift, and go to state 47
    '('            shift, and go to state 48

    function_ref             go to state 54
    function_ref_par         go to state 55
    variable                 go to state 56
    simple_variable_or_proc  go to state 57
    factor                   go to state 72
    constant                 go to state 60


State 50

   26 if_stmt: IF cond . THEN stmt
   27        | IF cond . THEN stmt ELSE stmt

    THEN  shift, and go to state 73


State 51

   25 cond: expr .

    $default  reduce using rule 25 (cond)


State 52

   38 expr: simple_expr .
   39     | simple_expr . RELOP simple_expr
   41 simple_expr: simple_expr . ADDOP term
   42            | simple_expr . '-' term

    ADDOP  shift, and go to state 74
    RELOP  shift, and go to state 75
    '-'    shift, and go to state 76

    $default  reduce using rule 38 (expr)


State 53

   40 simple_expr: term .
   44 term: term . MULOP factor_a

    MULOP  shift, and go to state 77

    $default  reduce using rule 40 (simple_expr)


State 54

   55 factor: function_ref .

    $default  reduce using rule 55 (factor)


State 55

   45 function_ref: function_ref_par .
   48 variable: function_ref_par .

    '('       reduce using rule 48 (variable)
    $default  reduce using rule 45 (function_ref)


State 56

   46 function_ref_par: variable . '(' expr_list ')'

    '('  shift, and go to state 78


State 57

   47 variable: simple_variable_or_proc .

    $default  reduce using rule 47 (variable)


State 58

   43 term: factor_a .

    $default  reduce using rule 43 (term)


State 59

   51 factor_a: factor .

    $default  reduce using rule 51 (factor_a)


State 60

   53 factor: constant .

    $default  reduce using rule 53 (factor)


State 61

   29 stmt_prefix: WHILE cond .

    $default  reduce using rule 29 (stmt_prefix)


State 62

   33 read_stmt: READ '(' . ident_list ')'

    IDENTIFIER  shift, and go to state 6

    ident_list  go to state 79


State 63

   34 write_stmt: WRITE '(' . expr_list ')'

    NOT            shift, and go to state 41
    INT_CONSTANT   shift, and go to state 42
    REAL_CONSTANT  shift, and go to state 43
    BOOL_CONSTANT  shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    IDENTIFIER_F   shift, and go to state 46
    CHAR_CONSTANT  shift, and go to state 47
    '('            shift, and go to state 48
    '-'            shift, and go to state 49

    expr_list                go to state 80
    expr                     go to state 81
    simple_expr              go to state 52
    term                     go to state 53
    function_ref             go to state 54
    function_ref_par         go to state 55
    variable                 go to state 56
    simple_variable_or_proc  go to state 57
    factor_a                 go to state 58
    factor                   go to state 59
    constant                 go to state 60


State 64

   35 goto_stmt: GOTO IDENTIFIER .

    $default  reduce using rule 35 (goto_stmt)


State 65

   11 compound_stmt: BEGIN_STMT stmt_list END .

    $default  reduce using rule 11 (compound_stmt)


State 66

   12 stmt_list: stmt_list ';' . stmt

    IDENTIFIER  shift, and go to state 15
    BEGIN_STMT  shift, and go to state 10
    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    READ        shift, and go to state 18
    WRITE       shift, and go to state 19
    GOTO        shift, and go to state 20

    $default  reduce using rule 30 (stmt_prefix)

    compound_stmt    go to state 21
    stmt             go to state 82
    label            go to state 24
    unlabelled_stmt  go to state 25
    assign_stmt      go to state 26
    if_stmt          go to state 27
    loop_stmt        go to state 28
    stmt_prefix      go to state 29
    read_stmt        go to state 30
    write_stmt       go to state 31
    goto_stmt        go to state 32


State 67

   14 stmt: label ':' . unlabelled_stmt

    IDENTIFIER  shift, and go to state 83
    BEGIN_STMT  shift, and go to state 10
    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    READ        shift, and go to state 18
    WRITE       shift, and go to state 19
    GOTO        shift, and go to state 20

    $default  reduce using rule 30 (stmt_prefix)

    compound_stmt    go to state 21
    unlabelled_stmt  go to state 84
    assign_stmt      go to state 26
    if_stmt          go to state 27
    loop_stmt        go to state 28
    stmt_prefix      go to state 29
    read_stmt        go to state 30
    write_stmt       go to state 31
    goto_stmt        go to state 32


State 68

   28 loop_stmt: stmt_prefix DO . stmt_list stmt_suffix

    IDENTIFIER  shift, and go to state 15
    BEGIN_STMT  shift, and go to state 10
    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    READ        shift, and go to state 18
    WRITE       shift, and go to state 19
    GOTO        shift, and go to state 20

    $default  reduce using rule 30 (stmt_prefix)

    compound_stmt    go to state 21
    stmt_list        go to state 85
    stmt             go to state 23
    label            go to state 24
    unlabelled_stmt  go to state 25
    assign_stmt      go to state 26
    if_stmt          go to state 27
    loop_stmt        go to state 28
    stmt_prefix      go to state 29
    read_stmt        go to state 30
    write_stmt       go to state 31
    goto_stmt        go to state 32


State 69

   24 assign_stmt: IDENTIFIER ASSIGN expr .

    $default  reduce using rule 24 (assign_stmt)


State 70

   56 factor: NOT factor .

    $default  reduce using rule 56 (factor)


State 71

   54 factor: '(' expr . ')'

    ')'  shift, and go to state 86


State 72

   50 factor_a: '-' factor .

    $default  reduce using rule 50 (factor_a)


State 73

   26 if_stmt: IF cond THEN . stmt
   27        | IF cond THEN . stmt ELSE stmt

    IDENTIFIER  shift, and go to state 15
    BEGIN_STMT  shift, and go to state 10
    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    READ        shift, and go to state 18
    WRITE       shift, and go to state 19
    GOTO        shift, and go to state 20

    $default  reduce using rule 30 (stmt_prefix)

    compound_stmt    go to state 21
    stmt             go to state 87
    label            go to state 24
    unlabelled_stmt  go to state 25
    assign_stmt      go to state 26
    if_stmt          go to state 27
    loop_stmt        go to state 28
    stmt_prefix      go to state 29
    read_stmt        go to state 30
    write_stmt       go to state 31
    goto_stmt        go to state 32


State 74

   41 simple_expr: simple_expr ADDOP . term

    NOT            shift, and go to state 41
    INT_CONSTANT   shift, and go to state 42
    REAL_CONSTANT  shift, and go to state 43
    BOOL_CONSTANT  shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    IDENTIFIER_F   shift, and go to state 46
    CHAR_CONSTANT  shift, and go to state 47
    '('            shift, and go to state 48
    '-'            shift, and go to state 49

    term                     go to state 88
    function_ref             go to state 54
    function_ref_par         go to state 55
    variable                 go to state 56
    simple_variable_or_proc  go to state 57
    factor_a                 go to state 58
    factor                   go to state 59
    constant                 go to state 60


State 75

   39 expr: simple_expr RELOP . simple_expr

    NOT            shift, and go to state 41
    INT_CONSTANT   shift, and go to state 42
    REAL_CONSTANT  shift, and go to state 43
    BOOL_CONSTANT  shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    IDENTIFIER_F   shift, and go to state 46
    CHAR_CONSTANT  shift, and go to state 47
    '('            shift, and go to state 48
    '-'            shift, and go to state 49

    simple_expr              go to state 89
    term                     go to state 53
    function_ref             go to state 54
    function_ref_par         go to state 55
    variable                 go to state 56
    simple_variable_or_proc  go to state 57
    factor_a                 go to state 58
    factor                   go to state 59
    constant                 go to state 60


State 76

   42 simple_expr: simple_expr '-' . term

    NOT            shift, and go to state 41
    INT_CONSTANT   shift, and go to state 42
    REAL_CONSTANT  shift, and go to state 43
    BOOL_CONSTANT  shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    IDENTIFIER_F   shift, and go to state 46
    CHAR_CONSTANT  shift, and go to state 47
    '('            shift, and go to state 48
    '-'            shift, and go to state 49

    term                     go to state 90
    function_ref             go to state 54
    function_ref_par         go to state 55
    variable                 go to state 56
    simple_variable_or_proc  go to state 57
    factor_a                 go to state 58
    factor                   go to state 59
    constant                 go to state 60


State 77

   44 term: term MULOP . factor_a

    NOT            shift, and go to state 41
    INT_CONSTANT   shift, and go to state 42
    REAL_CONSTANT  shift, and go to state 43
    BOOL_CONSTANT  shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    IDENTIFIER_F   shift, and go to state 46
    CHAR_CONSTANT  shift, and go to state 47
    '('            shift, and go to state 48
    '-'            shift, and go to state 49

    function_ref             go to state 54
    function_ref_par         go to state 55
    variable                 go to state 56
    simple_variable_or_proc  go to state 57
    factor_a                 go to state 91
    factor                   go to state 59
    constant                 go to state 60


State 78

   46 function_ref_par: variable '(' . expr_list ')'

    NOT            shift, and go to state 41
    INT_CONSTANT   shift, and go to state 42
    REAL_CONSTANT  shift, and go to state 43
    BOOL_CONSTANT  shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    IDENTIFIER_F   shift, and go to state 46
    CHAR_CONSTANT  shift, and go to state 47
    '('            shift, and go to state 48
    '-'            shift, and go to state 49

    expr_list                go to state 92
    expr                     go to state 81
    simple_expr              go to state 52
    term                     go to state 53
    function_ref             go to state 54
    function_ref_par         go to state 55
    variable                 go to state 56
    simple_variable_or_proc  go to state 57
    factor_a                 go to state 58
    factor                   go to state 59
    constant                 go to state 60


State 79

    5 ident_list: ident_list . ',' IDENTIFIER
   33 read_stmt: READ '(' ident_list . ')'

    ','  shift, and go to state 14
    ')'  shift, and go to state 93


State 80

   34 write_stmt: WRITE '(' expr_list . ')'
   37 expr_list: expr_list . ',' expr

    ','  shift, and go to state 94
    ')'  shift, and go to state 95


State 81

   36 expr_list: expr .

    $default  reduce using rule 36 (expr_list)


State 82

   12 stmt_list: stmt_list ';' stmt .

    $default  reduce using rule 12 (stmt_list)


State 83

   24 assign_stmt: IDENTIFIER . ASSIGN expr

    ASSIGN  shift, and go to state 40


State 84

   14 stmt: label ':' unlabelled_stmt .

    $default  reduce using rule 14 (stmt)


State 85

   12 stmt_list: stmt_list . ';' stmt
   28 loop_stmt: stmt_prefix DO stmt_list . stmt_suffix

    END    shift, and go to state 96
    UNTIL  shift, and go to state 97
    ';'    shift, and go to state 66

    stmt_suffix  go to state 98


State 86

   54 factor: '(' expr ')' .

    $default  reduce using rule 54 (factor)


State 87

   26 if_stmt: IF cond THEN stmt .
   27        | IF cond THEN stmt . ELSE stmt

    ELSE  shift, and go to state 99

    $default  reduce using rule 26 (if_stmt)


State 88

   41 simple_expr: simple_expr ADDOP term .
   44 term: term . MULOP factor_a

    MULOP  shift, and go to state 77

    $default  reduce using rule 41 (simple_expr)


State 89

   39 expr: simple_expr RELOP simple_expr .
   41 simple_expr: simple_expr . ADDOP term
   42            | simple_expr . '-' term

    ADDOP  shift, and go to state 74
    '-'    shift, and go to state 76

    $default  reduce using rule 39 (expr)


State 90

   42 simple_expr: simple_expr '-' term .
   44 term: term . MULOP factor_a

    MULOP  shift, and go to state 77

    $default  reduce using rule 42 (simple_expr)


State 91

   44 term: term MULOP factor_a .

    $default  reduce using rule 44 (term)


State 92

   37 expr_list: expr_list . ',' expr
   46 function_ref_par: variable '(' expr_list . ')'

    ','  shift, and go to state 94
    ')'  shift, and go to state 100


State 93

   33 read_stmt: READ '(' ident_list ')' .

    $default  reduce using rule 33 (read_stmt)


State 94

   37 expr_list: expr_list ',' . expr

    NOT            shift, and go to state 41
    INT_CONSTANT   shift, and go to state 42
    REAL_CONSTANT  shift, and go to state 43
    BOOL_CONSTANT  shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    IDENTIFIER_F   shift, and go to state 46
    CHAR_CONSTANT  shift, and go to state 47
    '('            shift, and go to state 48
    '-'            shift, and go to state 49

    expr                     go to state 101
    simple_expr              go to state 52
    term                     go to state 53
    function_ref             go to state 54
    function_ref_par         go to state 55
    variable                 go to state 56
    simple_variable_or_proc  go to state 57
    factor_a                 go to state 58
    factor                   go to state 59
    constant                 go to state 60


State 95

   34 write_stmt: WRITE '(' expr_list ')' .

    $default  reduce using rule 34 (write_stmt)


State 96

   32 stmt_suffix: END .

    $default  reduce using rule 32 (stmt_suffix)


State 97

   31 stmt_suffix: UNTIL . cond

    NOT            shift, and go to state 41
    INT_CONSTANT   shift, and go to state 42
    REAL_CONSTANT  shift, and go to state 43
    BOOL_CONSTANT  shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    IDENTIFIER_F   shift, and go to state 46
    CHAR_CONSTANT  shift, and go to state 47
    '('            shift, and go to state 48
    '-'            shift, and go to state 49

    cond                     go to state 102
    expr                     go to state 51
    simple_expr              go to state 52
    term                     go to state 53
    function_ref             go to state 54
    function_ref_par         go to state 55
    variable                 go to state 56
    simple_variable_or_proc  go to state 57
    factor_a                 go to state 58
    factor                   go to state 59
    constant                 go to state 60


State 98

   28 loop_stmt: stmt_prefix DO stmt_list stmt_suffix .

    $default  reduce using rule 28 (loop_stmt)


State 99

   27 if_stmt: IF cond THEN stmt ELSE . stmt

    IDENTIFIER  shift, and go to state 15
    BEGIN_STMT  shift, and go to state 10
    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    READ        shift, and go to state 18
    WRITE       shift, and go to state 19
    GOTO        shift, and go to state 20

    $default  reduce using rule 30 (stmt_prefix)

    compound_stmt    go to state 21
    stmt             go to state 103
    label            go to state 24
    unlabelled_stmt  go to state 25
    assign_stmt      go to state 26
    if_stmt          go to state 27
    loop_stmt        go to state 28
    stmt_prefix      go to state 29
    read_stmt        go to state 30
    write_stmt       go to state 31
    goto_stmt        go to state 32


State 100

   46 function_ref_par: variable '(' expr_list ')' .

    $default  reduce using rule 46 (function_ref_par)


State 101

   37 expr_list: expr_list ',' expr .

    $default  reduce using rule 37 (expr_list)


State 102

   31 stmt_suffix: UNTIL cond .

    $default  reduce using rule 31 (stmt_suffix)


State 103

   27 if_stmt: IF cond THEN stmt ELSE stmt .

    $default  reduce using rule 27 (if_stmt)
